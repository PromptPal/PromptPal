#import * from './types/common.gql'
#import * from './types/project.gql'
#import * from './types/prompt.gql'
#import * from './types/openToken.gql'
#import * from './types/user.gql'
#import * from './types/call.gql'
#import * from './types/history.gql'
#import * from './types/provider.gql'
#import * from './types/webhook.gql'
#import * from './types/webhook_call.gql'
#import * from './types/cost_report.gql'

schema {
  query: Query
  mutation: Mutation
}

type Query {
  auth(auth: AuthInput!): Auth!
  project(id: Int!): Project!
  projects(pagination: PaginationInput!): ProjectList!

  prompts(projectId: Int!, pagination: PaginationInput!): PromptList!
  prompt(id: Int!, filters: PromptSearchFilters): Prompt!
  user(id: Int): User!
  calls(promptId: Int!, pagination: PaginationInput!): PromptCallList!

  # Provider queries
  provider(id: Int!): Provider!
  providers(pagination: PaginationInput!): ProviderList!

  # Webhook queries
  webhook(id: Int!): Webhook!
  webhooks(projectId: Int!, pagination: PaginationInput!): WebhookList!

  # Cost report queries
  reports(filters: CostReportFilters!): CostReportList!
}

type Mutation {
  passwordAuth(auth: PasswordAuthInput!): Auth!
  createProject(data: ProjectPayload!): Project!
  updateProject(id: Int!, data: ProjectPayload!): Project!
  deleteProject(id: Int!): Boolean!

  createPrompt(data: PromptPayload!): Prompt!
  updatePrompt(id: Int!, data: PromptPayload!): Prompt!
  deletePrompt(id: Int!): Boolean!

  createOpenToken(data: openTokenInput!): CreateOpenToken!
  updateOpenToken(id: Int!, data: openTokenUpdate!): openToken!
  deleteOpenToken(id: Int!): Boolean!

  # Provider mutations
  createProvider(data: ProviderPayload!): Provider!
  updateProvider(id: Int!, data: ProviderUpdatePayload!): Provider!
  deleteProvider(id: Int!): Boolean!

  # User mutations
  createUser(data: CreateUserPayload!): CreateUserResponse!

  # Webhook mutations
  createWebhook(data: WebhookPayload!): Webhook!
  updateWebhook(id: Int!, data: WebhookUpdatePayload!): Webhook!
  deleteWebhook(id: Int!): Boolean!
}
